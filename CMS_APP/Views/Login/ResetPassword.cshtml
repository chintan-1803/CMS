@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model CMS.Models.ForgotPassword

<link rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" integrity="sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc" crossorigin="anonymous">
<link href="~/css/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="~/lib/font-awesome/css/fontawesome.css" />
<link rel="stylesheet" href="~/lib/Font-Awesome/css/regular.min.css">
<link rel="stylesheet" href="~/lib/Font-Awesome/css/solid.min.css">

<style>
    .mainDiv {
    display: flex;
    min-height: 100%;
    align-items: center;
    justify-content: center;
    background-color: #f9f9f9;
    font-family: 'Open Sans', sans-serif;
  }
 .cardStyle {
    width: 500px;
    border-color: white;
    background: #fff;
    padding: 36px 0;
    border-radius: 4px;
    margin: 30px 0;
    box-shadow: 0px 0 2px 0 rgba(0,0,0,0.25);
  }
#signupLogo {
  max-height: 100px;
  margin: auto;
  display: flex;
  flex-direction: column;
}
.formTitle{
  font-weight: 600;
  margin-top: 20px;
  color: #2F2D3B;
  text-align: center;
}
.inputLabel {
  font-size: 12px;
  color: #555;
  margin-bottom: 6px;
  margin-top: 24px;
}
  .inputDiv {
    width: 70%;
    display: flex;
    flex-direction: column;
    margin: auto;
  }
input {
  height: 40px;
  font-size: 16px;
  border-radius: 4px;
  border: none;
  border: solid 1px #ccc;
  padding: 0 11px;
}
input:disabled {
  cursor: not-allowed;
  border: solid 1px #eee;
}
.buttonWrapper {
  margin-top: 40px;
}
  .submitButton {
    width: 70%;
    height: 40px;
    margin: auto;
    display: block;
    color: #fff;
    background-color: #065492;
    border-color: #065492;
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);
    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.035);
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
  }
.submitButton:disabled,
button[disabled] {
  border: 1px solid #cccccc;
  background-color: #cccccc;
  color: #666666;
}

#loader {
  position: absolute;
  z-index: 1;
  margin: -2px 0 0 10px;
  border: 4px solid #f3f3f3;
  border-radius: 50%;
  border-top: 4px solid #666666;
  width: 14px;
  height: 14px;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
}
    .inputDiv i {
        margin-left: 320px;
        margin-top: -27px;
        cursor: pointer;
    }
</style>

@*@if (TempData["Success-Message"] != null)
{
    <div id="Success-Message" class="alert alert-success">
        alert("@TempData["Success-Message"]");
        window.location.href = '@Url.Action("Login", "Login")'; // Replace "Action" and "Controller" with the appropriate names
    </div>
}*@




<div class="mainDiv">
    @if (TempData["Success-Message"] != null)
    {
        <script>
            alert('@TempData["Success-Message"]');
            window.location.href = '/Login/Login';
        </script>
    }
    <div class="cardStyle">
        
        <form action="ResetPassword" method="post" name="signupForm" id="signupForm">

            <img src="" id="signupLogo" />

            <h2 class="formTitle">
                Reset Your Account Password
            </h2>

            <input type="hidden" id="emailid" name="emailid" value="@Model.EmailId" required>

            <div class="inputDiv">
                <label class="inputLabel" for="password">New Password</label>
                <input type="password" id="password" name="password" value="@Model.Password" required>
                <i class="fa fa-eye-slash" id="togglePassword"></i>
            </div>

            <div class="inputDiv">
                <label class="inputLabel" for="confirmPassword">Confirm Password</label>
                <input type="password" id="confirmPassword" name="confirmPassword" value="@Model.ConfirmPassword" required>
                <i class="fa fa-eye-slash" id="confirmtogglePassword"></i>
            </div>

            <div class="buttonWrapper">
                <button type="submit" id="submitButton" onclick="validateSignupForm()" class="submitButton pure-button pure-button-primary">
                    <span>Continue</span>
                    <span id="loader"></span>
                </button>
            </div>

        </form>
    </div>
</div>

<script src="~/js/jquery/jquery.min.js"></script>


<script >
    var password = document.getElementById("password")
  , confirm_password = document.getElementById("confirmPassword");
    
document.getElementById('signupLogo').src = "https://s3-us-west-2.amazonaws.com/shipsy-public-assets/shipsy/SHIPSY_LOGO_BIRD_BLUE.png";
enableSubmitButton();

    var togglePassword = document.querySelector("#togglePassword");
    var password = document.querySelector("#password");
    togglePassword.addEventListener("click", function () {
        // toggle the type attribute
        const type = password.getAttribute("type") === "password" ? "text" : "password";
        password.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("fa-eye");
    });

    var confirmtogglePassword = document.querySelector("#confirmtogglePassword");
    var confirmPassword = document.querySelector("#confirmPassword");
    confirmtogglePassword.addEventListener("click", function () {
        // toggle the type attribute
        const type = confirmPassword.getAttribute("type") === "password" ? "text" : "password";
        confirmPassword.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("fa-eye");
    });

function validatePassword() {
  //if (!/[a-z]/.test(password.value) || !/[A-Z]/.test(password.value) || !/[0-9]/.test(password.value) || !/[^a-zA-Z0-9]/.test(password.value)) {
  //          password.setCustomValidity("Password must have lowercase, uppercase, digit, and special character.");
  //          return false;
  //}
        if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*\W)/.test(password.value)) {
            password.setCustomValidity("Password must have lowercase, uppercase, digit, and special character.");
            return false;
        }

        //if (!/([a-z]|[A-Z]|[0-9]|[\\W]){4}[a-zA-Z0-9\\W]{3,11}/.test(password.value)) {
        //    password.setCustomValidity("Password must have lowercase, uppercase, digit, and special character.");
        //    return false;
        //}

  if(password.value != confirm_password.value) {
    confirm_password.setCustomValidity("Passwords Don't Match");
    return false;
  } else {
    confirm_password.setCustomValidity('');
    return true;
  }
}

password.onchange = validatePassword;
confirm_password.onkeyup = validatePassword;

function enableSubmitButton() {
  document.getElementById('submitButton').disabled = false;
  document.getElementById('loader').style.display = 'none';
}

function disableSubmitButton() {
  document.getElementById('submitButton').disabled = true;
  document.getElementById('loader').style.display = 'unset';
}

function validateSignupForm() {
  var form = document.getElementById('signupForm');
  
  for(var i=0; i < form.elements.length; i++){
      if(form.elements[i].value === '' && form.elements[i].hasAttribute('required')){
        console.log('There are some required fields!');
        return false;
      }
    }
  
  if (!validatePassword()) {
    return false;
  }
  
  //onSignup();
}

function onSignup() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    
    disableSubmitButton();
    
    if (this.readyState == 4 && this.status == 200) {
      enableSubmitButton();

    }
    else {
      console.log('AJAX call failed!');
      setTimeout(function(){
        enableSubmitButton();
      }, 1000);
    }
    
  };
  
  xhttp.open("GET", "ajax_info.txt", true);
  xhttp.send();
}
</script>