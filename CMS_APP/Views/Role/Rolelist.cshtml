@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using CMS.Constants;
@using CMS.ApplicationHelpers;
@model CMS.Models.RoleViewModel
@*@model List<CMS.Models.RoleModel>*@
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Http
@{
	ViewData["Title"] = "RolePage";
	//string create_User = HttpContextAccessor.HttpContext.Session.GetString("create_User");
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/lib/font-awesome/css/fontawesome.css" />
<link rel="stylesheet" href="~/lib/Font-Awesome/css/regular.min.css">
<link rel="stylesheet" href="~/lib/Font-Awesome/css/solid.min.css">

<style type="text/css">

	.btn-primary {
		width: 45px;
		height: 30px;
		padding: 0; /* optional: removes padding inside button */
	}

	.btn1.btn-primary {
		width: 98px;
		height: 35px;
		padding: 0; /* optional: removes padding inside button */
	}

	.btn.btn-deep-blue {
		position: right;
		background-color: #0047ab;
		color: #fff;
		/* border: 1px solid #ADD8E6;*/
		padding: 10px 20px;
		border-radius: 5px;
		font-size: 16px;
		cursor: pointer;
		/*color :#ADD8E6;*/
	}

	.modal-header .close {
		font-size: 20px;
	}

	.modal-body {
		text-align: left;
	}

	.right-align {
		text-align: left;
	}

</style>

<div class="col-xl-12 col-md-12">
	<div class="card table-card">
		<div class="card-header">
			<h5>Role List</h5>
			<div class="card-header-right">

				<button type="button" class="btn1 btn-primary" width="10px" height="10px" data-toggle="modal" data-target="#exampleModalCenter" onclick="clearModal()">
					Create New
				</button>

				@*Add Reason--pop box*@
				<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
					<div class="modal-dialog modal-dialog-centered" role="document">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<div class="modal-header text-center">
									<h4 class="modal-title w-100 font-weight-bold">Create New Role</h4>
									<button type="button" class="close" data-dismiss="modal" aria-label="Close">
										<span aria-hidden="true">&times;</span>
									</button>
								</div>

								<div class="modal-body mx-3">
									<label data-error="wrong" data-success="right" for="orangeForm-name">

										<span class="modal-text w-100  font-weight-bold " style="vertical-align: middle; font-size: 1.2em; color: grey;">Role <span style="color: red; display: inline;">*</span></span>
									</label>
									<input asp-for="RoleName" type="text" id="RoleName" class="form-control validate" oninput="this.value = this.value.replace(/[^a-zA-Z\s]/g, '');">
									<span asp-validation-for="RoleName" class="text-danger" id="RoleError"></span>
								</div>

								@*<input type="hidden" id="create_User" value="@create_User" class="form-control validate">*@
							
								<div class="modal-footer d-flex justify-content-center">
									<button class="btn btn-deep-blue" id="save-btn" > Save </button>

								</div>
							</div>


						</div>
					</div>
				</div>

			</div>


			@*<div class="card-header-right">
			<ul class="list-unstyled card-option">
			<li><i class="fa fa fa-wrench open-card-option"></i></li>
			<li><i class="fa fa-window-maximize full-card"></i></li>
			<li><i class="fa fa-minus minimize-card"></i></li>
			<li><i class="fa fa-refresh reload-card"></i></li>
			<li><i class="fa fa-trash close-card"></i></li>
			</ul>
			</div>*@
		</div>
		<div class="card-block">
			<div class="table-responsive">
				<table class="table table-hover">
					<thead>
						<tr>
							<th class="text-center">RoleName</th>
							<th class="text-center">CreatedBy</th>
							<th class="text-center">Create Date</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var data in Model.Roles)
						{
							<tr>
								<td class="text-center">
									<div class="d-inline-block align-middle">
										<div class="d-inline-block">
											<h6>@data.RoleName</h6>
										</div>
									</div>
								</td>
								<td class="text-center">@data.create_User</td>
								<td class="text-center">@data.create_Date</td>
								<td class="text-right">
									<div class="dropdown">
										<button width="10px" height="10px" type="button" class="btn btn-primary light sharp" data-toggle="dropdown">
											<svg width="20px" height="20px" viewBox="0 0 24 24" version="1.1">
												<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
													<rect x="0" y="0" width="24" height="24"></rect>
													<circle fill="#000000" cx="5" cy="12" r="2"></circle>
													<circle fill="#000000" cx="12" cy="12" r="2"></circle>
													<circle fill="#000000" cx="19" cy="12" r="2"></circle>
												</g>
											</svg>
										</button>
										<div class="dropdown-menu">
											@*<button type="button" class="dropdown-item" data-toggle="modal" data-target="#UpdateModalCenter_@data.DesignationID">Edit</button>
										*@
											<button type="button" id="EDIT_@data.RoleId" class="dropdown-item" data-toggle="modal" data-target="#UpdateModalCenter_@data.RoleId" onclick="updateClearModal(@data.RoleId)">Edit</button>
											<button type="button" class="dropdown-item" data-toggle="modal" data-target="#myModal_@data.RoleId">Delete</button>
										</div>
									</div>

									<!-- Modal HTML -->
									<div class="text-center">
										<div id="myModal_@data.RoleId" class="modal fade">
											<div class="modal-dialog modal-confirm">
												<div class="modal-content">
													<div class="modal-header flex-column-vertical">
														<h4 class="modal-title w-100" style="vertical-align: middle;">Are you sure?</h4>
														<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
													</div>
													<div class="modal-body">
														<input type="hidden" id="deleteroleid_@data.RoleId" value="@data.RoleId" class="form-control validate">
														<p>Do you really want to delete these records? This process cannot be undone.</p>
													</div>
													<div class="modal-footer justify-content-center">
														<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
														<button type="button" onclick="deletefunction(@data.RoleId)" class="btn btn-danger" id="delete-btn">Delete</button>

													</div>
												</div>
											</div>
										</div>
									</div>

									<!-- Update Popup-->

									<div class="modal fade" id="UpdateModalCenter_@data.RoleId" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
										<div class="modal-dialog modal-dialog-centered" role="document">
											<div class="modal-dialog" role="document">
												<div class="modal-content">
													<div class="modal-header text-center">
														<h4 class="modal-title w-100 font-weight-bold">Edit Role</h4>
														<button type="button" class="close" data-dismiss="modal" aria-label="Close">
															<span aria-hidden="true">&times;</span>
														</button>
													</div>

													<div class="modal-body ">
														<input type="hidden" id="previousRole_@data.RoleId" value="@data.RoleName" />
														<input type="hidden" id="updateRoleId_@data.RoleId" value="@data.RoleId" class="form-control validate" readonly>
														<div class="modal-body">
															<label class="text-right" data-error="wrong" data-success="right" for="orangeForm-name">
																<span class="modal-text w-100  font-weight-bold " style="vertical-align: middle; font-size: 1.2em; color: grey;">Role <span style="color: red; display: inline;">*</span></span>
															</label>
															<input asp-for="RoleName" type="text" id="updaterole_@data.RoleId" value="@data.RoleName" class="form-control validate" oninput="this.value = this.value.replace(/[^a-zA-Z\s]/g, '');">
															<span asp-validation-for="RoleName" class="text-danger" id="RoleError_@data.RoleId"></span>
														</div>
														<input type="hidden" id="update_change_Date_@data.RoleId" value="@data.change_Date" class="form-control validate">
													</div>
													
													<div class="modal-footer d-flex justify-content-center">
														<button class="btn btn-deep-blue" id="edit-btn" onclick="updatefunction(@data.RoleId)"> Edit </button>
													</div>

												</div>
											</div>
										</div>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
				@*<div class="text-right m-r-20">
					<a href="#!" class=" b-b-primary text-primary">View all Task</a>
				</div>*@
			</div>
			<!-- Pagination controls -->
			<div class="pagination-container">
				@if (Model != null && Model.PaginationModel.TotalPages >= 1)
				{
					<nav aria-label="Page navigation" class="text-right">
						<ul class="pagination justify-content-end">
							<li class="page-item @(Model.PaginationModel.CurrentPage == 1 ? "disabled" : "")">
								<a class="page-link" href="/Role/Rolelist?pageNumber=@(Model.PaginationModel.CurrentPage - 1)&pageSize=@Model.PaginationModel.PageSize" aria-label="Previous">
									Previous
								</a>
							</li>
							<li class="page-item">
								<a class="page-link" href="/Role/Rolelist?pageNumber=1&pageSize=@Model.PaginationModel.PageSize">First</a>
							</li>
							@for (int i = 1; i <= Model.PaginationModel.TotalPages; i++)
							{
								<li class="page-item @(i == Model.PaginationModel.CurrentPage ? "active" : "")">
									<a class="page-link" href="/Role/Rolelist?pageNumber=@i&pageSize=@Model.PaginationModel.PageSize">@i</a>
								</li>
							}
							<li class="page-item @(Model.PaginationModel.CurrentPage == Model.PaginationModel.TotalPages ? "disabled" : "")">
								<a class="page-link" href="/Role/Rolelist?pageNumber=@Model.PaginationModel.TotalPages&pageSize=@Model.PaginationModel.PageSize" aria-label="Last">
									Last
								</a>
							</li>
							<li class="page-item @(Model.PaginationModel.CurrentPage == Model.PaginationModel.TotalPages ? "disabled" : "")">
								<a class="page-link" href="/Role/Rolelist?pageNumber=@(Model.PaginationModel.CurrentPage + 1)&pageSize=@Model.PaginationModel.PageSize" aria-label="Next">
									Next
								</a>
							</li>
						</ul>
					</nav>
				}
			</div>
		</div>
	</div>
</div>




@*Update Designation--pop box*@







<!--  project and team member end -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

 <script>
	function clearModal() {
		// Clear the input field values
		$('#RoleName').val('');
		$('#RoleError').text('');

	}

	function updateClearModal(id) {
		//For update to get the previous values
		$("#updaterole_" + id).val($("#previousRole_" + id).val());

		// Clear the error messages
		$('#RoleError_' + id).text('');

	}

	$(function () {
		// Add click event handler to the Save button
		$('#save-btn').click(function () {
			// Get the values of the input fields
			var RoleName = $('#RoleName').val();
			//var createdBy = $('#create_User').val();

			if (RoleName === '') {
				$('#RoleError').text('Role is required.');
				return;
			}
			
			if (!/^[a-zA-Z]+(\s[a-zA-Z]+)?$/.test(RoleName.trim())) {
				$('#RoleError').text('Role is incorrect.Please enter a valid role.');
				return;
			}

			// Make the AJAX call
			$.ajax({
				url: '/Role/AddRolelist',
				method: 'POST',
				data: {
					RoleName: RoleName,
					//create_User: createdBy
				},
				success: function (response) {
					// Handle the response data here
					console.log(response);

					$('#exampleModalCenter').modal('hide');
					alert(response.message);
					location.reload();
				},
				error: function (response) {
				
					if (!response.IsSuccessful) {
						$('#RoleError').text("Role already exists. Please choose a different name.");
						return;
					}
					console.error(errorThrown);
				}
			});
		});
		$('#RoleName').on('input', function () {
			// Clear the error message when the field is not empty
			if ($(this).val() !== '') {
				$('#RoleError').text('');
			}
		});
	});

	function updatefunction(id) {

		

		var RoleId = $('#updateRoleId_' + id).val();
		var RoleName = $('#updaterole_' + id).val();
		//var updatedby = $('#update_change_user_' + id).val();
		var updatedtime = $('#update_change_Date_' + id).val();

		if (RoleName === '') {
			// Show error message and return without making the AJAX call
			$('#RoleError_'+ id).text('Role is required.');
				setTimeout(function () {
					$('#"RoleError_'+id).text('');
				}, 3000);
			return;
		}
		if (!/^[a-zA-Z]+(\s[a-zA-Z]+)?$/.test(RoleName.trim())) {
			// Show error message and return without making the AJAX call
			$('#RoleError_' + id).text('Role is incorrect.Please enter a valid role.');
				setTimeout(function () {
					$('#"RoleError_'+ id).text('');
				}, 3000);
			return;
		}

		$.ajax({
			url: '/Role/UpdateRolelist',
			method: 'put',
			data: {
				RoleId: RoleId,
				RoleName: RoleName,
				//change_user: updatedby,
				change_Date: updatedtime
			},
			success: function (response) {
				console.log(response);
				if (response.success) {
					// Record created successfully
					alert(response.message);
					location.reload();
				}
				else {
					$('#RoleError_' + id).text("Role already exists. Please choose a different name.");
					setTimeout(function () {
						$('#RoleError_' + id).text('');
					}, 3000);
					return;
				}
					location.reload();
			},
			error: function (response) {
				//if (!response.IsSuccessful) {
				//	$('#RoleError_' + id).text("Role already exists. Please choose a different name.");
				//	setTimeout(function () {
				//		$('#RoleError_' + id).text('');
				//	}, 3000);
				//	return;
				console.error(errorthrown);
			//}
			}
		});
		$('#updaterole_' + id).on('input', function () {
			// Clear the error message when the field is not empty
			if ($(this).val() !== '') {
				$('#RoleError_' + id).text('');
			}
		});
	}


	function deletefunction(id) {
		

		var roleid = $('#deleteroleid_' + id).val();

		$.ajax({
			url: '/Role/DeleteRolelist',
			method: 'put',
			data: {
				roleid: roleid,

			},
			success: function (response) {
				console.log(response);
				$('#examplemodalcenter').modal('hide');
				alert(response.message);
				location.reload();
			},
			error: function (response) {
				console.error(errorthrown);
			}
		});
	}

</script>
